class BlockType {
	constructor() {

	}

	/**
	 * Detect if an instance of this BlockType can move in a specified direction
	 * @param {Block} instance
	 * @param {Vector2} direction
	 * @returns {boolean} success
	 */
	canMove(instance, direction) {
		let pos = Vector2.add(instance.position, direction);
		let tile = instance.game.getTile(pos);
		if (tile === undefined) return false;
		if (instance.color !== tile.color) return false;
		if (instance.color !== 0 && tile.color !== 0) return false;
		let block = instance.game.getBlock(pos);
		return block === undefined;
	}

	/**
	 * Attempt to set the velocity an instance of this BlockType to a specified direction
	 * @param {Block} instance
	 * @param {Vector2} direction
	 * @returns {boolean} success
	 */
	setVelocity(instance, direction) {
		if (!this.canMove(instance, direction)) {
			instance.velocity = Vector2.zero;
			return false;
		}
		instance.velocity = direction;
		return true;
	}

	/**
	 * Move an instance of this BlockType
	 * @param {Block} instance
	 * @returns {boolean} success
	 */
	move(instance) {
		instance.position.add(instance.velocity);
	}

	/**
	 * Update an instance of this BlockType
	 * @param {Block} instance
	 */
	update(instance) {
		if (!Vector2.equals(instance.velocity, Vector2.zero)) {
			this.move(instance);
			this.setVelocity(instance, instance.velocity);
			instance.changed = true;
		}
	}
}

module.exports = {BlockType};